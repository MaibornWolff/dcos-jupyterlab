name: Build package and release

on:
  push:
    tags:
      - 'v*'

env:
  IMAGE_NAME: jupyterlab

jobs:

  build-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dcosdev
      run: |
        python -m pip install --upgrade pip
        pip install git+https://github.com/swoehrl-mw/dcosdev

    - name: Build image
      run: docker build docker --tag $IMAGE_NAME

    - name: Log into GitHub Container Registry
      run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image to GitHub Container Registry
      run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(jq -r '.version' universe/package.json)
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  
    - name: Build bundle
      run: |
        dcosdev build bundle
        dcosfilepath=$(ls bundle/*.dcos)
        dcosfile=$(basename $dcosfilepath)
        echo "::set-env name=dcosfilepath::${dcosfilepath}"
        echo "::set-env name=dcosfile::${dcosfile}"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload bundle file
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.dcosfilepath }}
        asset_name: ${{ env.dcosfile }}
        asset_content_type: application/zip
  
